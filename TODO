TODO
====

BEFORE UPLOADING THE TREE
-------------------------

Fix the copyright in the [ch] files (year and license text.)`

Move the slave GPU access to hikaru-gpu.c. Proper support may require the
introduction of a new vk_device_accessors_t class.

Convert VK_*_{LOG,ERROR} from macros to functions; and add the DEVICE
variants.

Rewrite the JSON file to be more flexible (just like MAME.) Move its location
to '$HOME/.local/share/valkyrie' or something. Create that directory on
`make install'.

Convert TEXRAM and CMDRAM from vk_buffer_t's to simple byte arrays.

HIKARU
-------

Save state support. This is mandatory.

Implement better AICA support (especially the RTC.)

Implement better MIE support (that is, wrap a Z80 emulator in a
vk_cpu : z80 class and tape it in the code.)

Implement the three EEPROMs (MAINBD, ROMBD, MIE.)

SH4
---

Check FPU handling; especially FTRV, FIPR, PR, and XF/XD/FV/XMTRX access.

Implement simple per-basic-block LLVM translation. This should make debugging
a lot more bearable.

RENDERING
---------

Figure out how to render the PHARRIER 3D intro screen. Aside from FPU
bugs, we should be ready to go! This requires (in order of importance):

- Use VBOs or VAOs to render the tri strips; split tri strips based on
  command adjacency. It should be fairly easy.

- Fix viewport matrix settings: use separate settings for 2D layers and 3D.

- Figuring out the matrix/translation commands. Only 161 is used; other
  similar commands may actually be light-related. There's some evidence in
  PHARRIER.

- Implement viewport recall, at least for the scissor test.

- Fix Y coords in the BOOTROM menu. The translation component of the 161
  matrix doesn't seem to fix it; there must be some other offset somewhere
  in the command stream or MMIOs. Again, check against the BRAVEFF menu.

- Fix textures: perhap texheads are `registered' through the IDMA device
  and later recalled using texhead (0C1,2C1,4C1) commands. Note that
  if this is true, textures may be access by the GPU directly in slave RAM!

- Fix texture coords: 12 bits are enough to address the whole TEXRAM! Note
  that vtxnrm commands and texcoord commands should have the same tex
  coord range. Check if that is the case. Double check by making sure that
  the BRAVEFF test menu (which is rendered with 2D layers) looks exactly
  the same as the BOOTROM menu (which is rendered with tri strips.)

- Fix the bitmap layers properly. In particular, figure out their format
  by comparing the PHARRIER title screen to the youtube video. Also figure
  out how to enable them.

- Figure out how the fade-in effect is done in the intro screen.

- Don't upload the TEXRAM if there's nothing to be rendered.

- Make TEXRAM uploading _much_ faster. Right now 16% of all cycles are
  spent there; it makes no sense. Use dirty rectangles to make it even
  faster.

AIRTRIX
-------

Find out why it dies after the intro screen. Note that one MASKROM doesn't
pass the ROMBD test (all the other MASKROMs do.)

BRAVEFF
-------

Missing MASKROMs. Won't work. It works enough to display the test menu
though.

Cyber Troops Virtual On 4
-------------------------

Not dumped yet.

PHARRIER
--------

Render the 3D intro screen using the youtube footage as a reference.

Remove the out-of-bound-DMA-bug patch; it may be fucking up the intro
screen.

PODRACE
-------

Missing MASKROMS. Won't work. Useful to test MASKROM shrinkage tho (the
second problem SGNASCAR has.)

SGNASCAR
--------

For some reason the ROM->RAM transfer table at EPROM offset +390 tells
the BOOTROM to read 01FF0000 bytes from the ROM aperture at 03xxxxxx.
The problem is that the aperture is only 16MB wide, so the BOOTROM ends
up reading garbage from the 04xxxxxx MEMCTL device.

Adding a patch to make the memcpy loop respect the bounds make SGNASCAR
jump to the newly-copied code, but later writes stuff to the BOOTROM
read-only area.

Note that MASKROMs are not mapped correctly: contrarily to AIRTRIX and
PHARRIER the CRCs compute by the ROMBD test menu are wrong.

