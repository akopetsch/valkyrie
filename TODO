TODO
====

BEFORE UPLOADING THE TREE
-------------------------

Make SGNASCAR boot.

Move the slave GPU access to hikaru-gpu.c.

Rewrite the JSON file to be more flexible (just like MAME.)

Move the JSON location to '$HOME/.local/share/valkyrie' or something.

Fix the copyright in the [ch] files (year, and license text.)

Send a copy of the source to RBelmont.

HIKARU
-------

Implement better AICA support (especially the RTC.)

Implement better MIE support (that is, wrap a Z80 emulator in a
vk_cpu : z80 class and tape it in the code.)

Implement the three EEPROMs (MAINBD, ROMBD, MIE.)

SH4
---

Gix FTRV, FIPR PR handling; see AIRTRIX/PHARRIER.

Enable DMAC for PHARRIER.

Implement internal IRQs (for DMAC.)

Implement the TMU.

Fix SQ access for PHARRIER.

RENDERING
---------

Fix triangle rendering: put everything in a vertex buffer object and compute
the properties of each triangle before rendering it. It's required to
display the CRT test screen properly.

Fix texturing; decode the coordinates properly. This likely implies finding
out what the texture commands (2C1, etc.) mean. Considering that the
tri-strip main menu should look like the braveff menu (which is rendered
directly using the bitmap layers), the Y coordinates are way off.

Fix GPU IDMA; it likely performs texture decoding. Use the BOOTROM and
AIRTRIX as test cases. Note that the parameters to the IDMA are the same
as the texture commands (2C1, etc.)

Fix the bitmap layers. The area cleared in TEXRAM by AIRTRIX doesn't match
the area where the textures are uploaded (see the SEGA intro screen.) Find
out why.

AIRTRIX
-------

Find out why it goes haywire.

BRAVEFF
-------

Missing MASKROMs. Won't work. It works enough to display the test menu
though.

Cyber Troops Virtual On 4
-------------------------

Not dumped yet.

PHARRIER
--------

Find out why it goes haywire.

PODRACE
-------

Missing MASKROMS. Won't work. Useful to test MASKROM shrinkage tho (the
second problem SGNASCAR has.)

SGNASCAR
--------

The game just doesn't boot. EPROM/MASKROM layout is wrong, and/or ROMBD
parameters read from the EPROM (in authenticate_rom () or late __init ())
simply don't work. To find out what is wrong, just look at the PR of
set_errno_and_init_machine ().

The following patch makes the problematic check pass.

	case 0x0C00BC9A:
		/* Makes authenticate_rom pass also for SGNASCAR; the problem
		 * is that the EEPROM contents and the EPROM contents don't
		 * agree on something (EPROM size maybe?) */
		R(3) = 0;
		break;

However . The problem seems to be bad EPROM mapping and/or bad EEPROM values
influencing the boot process.
