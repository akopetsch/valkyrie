#ifndef __VK_SH_INSNS_DESC_H__
#define __VK_SH_INSNS_DESC_H__

/* SH-2 specific */
static const idesctype insns_desc_sh2[] = {

	/* data transfer, p. 33 */
	IDEF(0xF00F, 0x6003, mov),
	IDEF(0xF00F, 0x2000, movbs),
	IDEF(0xF00F, 0x2001, movws),
	IDEF(0xF00F, 0x2002, movls),
	IDEF(0xF00F, 0x6000, movbl),
	IDEF(0xF00F, 0x6001, movwl),
	IDEF(0xF00F, 0x6002, movll),
	IDEF(0xF00F, 0x2004, movbm),
	IDEF(0xF00F, 0x2005, movwm),
	IDEF(0xF00F, 0x2006, movlm),
	IDEF(0xF00F, 0x6004, movbp),
	IDEF(0xF00F, 0x6005, movwp),
	IDEF(0xF00F, 0x6006, movlp),
	IDEF(0xF00F, 0x0004, movbs0),
	IDEF(0xF00F, 0x0005, movws0),
	IDEF(0xF00F, 0x0006, movls0),
	IDEF(0xF00F, 0x000C, movbl0),
	IDEF(0xF00F, 0x000D, movwl0),
	IDEF(0xF00F, 0x000E, movll0),
	IDEF(0xF000, 0xE000, movi),
	IDEF(0xF000, 0x9000, movwi),
	IDEF(0xF000, 0xD000, movli),
	IDEF(0xFF00, 0xC400, movblg),
	IDEF(0xFF00, 0xC500, movwlg),
	IDEF(0xFF00, 0xC600, movllg),
	IDEF(0xFF00, 0xC000, movbsg),
	IDEF(0xFF00, 0xC100, movwsg),
	IDEF(0xFF00, 0xC200, movlsg),
	IDEF(0xFF00, 0x8000, movbs4),
	IDEF(0xFF00, 0x8100, movws4),
	IDEF(0xF000, 0x1000, movls4),
	IDEF(0xFF00, 0x8400, movbl4),
	IDEF(0xFF00, 0x8500, movwl4),
	IDEF(0xF000, 0x5000, movll4),
	IDEF(0xFF00, 0xC700, mova),
	IDEF(0xF0FF, 0x0029, movt),
	IDEF(0xF00F, 0x6008, swapb),
	IDEF(0xF00F, 0x6009, swapw),
	IDEF(0xF00F, 0x200D, xtrct),

	/* arithmetic instructions, p. 35 */
	IDEF(0xF00F, 0x300C, add),
	IDEF(0xF000, 0x7000, addi),
	IDEF(0xF00F, 0x300E, addc),
	IDEF(0xF00F, 0x300F, addv),
	IDEF(0xFF00, 0x8800, cmpim),
	IDEF(0xF00F, 0x3000, cmpeq),
	IDEF(0xF00F, 0x3002, cmphs),
	IDEF(0xF00F, 0x3003, cmpge),
	IDEF(0xF00F, 0x3006, cmphi),
	IDEF(0xF00F, 0x3007, cmpgt),
	IDEF(0xF0FF, 0x4011, cmppz),
	IDEF(0xF0FF, 0x4015, cmppl),
	IDEF(0xF00F, 0x200C, cmpstr),
	IDEF(0xF00F, 0x3004, div1),
	IDEF(0xF00F, 0x2007, div0s),
	IDEF(0xFFFF, 0x0019, div0u),
	IDEF(0xF00F, 0x300D, dmuls),
	IDEF(0xF00F, 0x3005, dmulu),
	IDEF(0xF0FF, 0x4010, dt),
	IDEF(0xF00F, 0x600E, extsb),
	IDEF(0xF00F, 0x600F, extsw),
	IDEF(0xF00F, 0x600C, extub),
	IDEF(0xF00F, 0x600D, extuw),
	IDEF(0xF00F, 0x000F, macl),
	IDEF(0xF00F, 0x400F, macw),
	IDEF(0xF00F, 0x0007, mull),
	IDEF(0xF00F, 0x200F, mulsw),
	IDEF(0xF00F, 0x200E, muluw),
	IDEF(0xF00F, 0x600B, neg),
	IDEF(0xF00F, 0x600A, negc),
	IDEF(0xF00F, 0x3008, sub),
	IDEF(0xF00F, 0x300A, subc),
	IDEF(0xF00F, 0x300B, subv),

	/* logical instructions, p. 37 */
	IDEF(0xF00F, 0x2009, and),
	IDEF(0xFF00, 0xC900, andi),
	IDEF(0xFF00, 0xCD00, andm),
	IDEF(0xF00F, 0x6007, not),
	IDEF(0xF00F, 0x200B, or),
	IDEF(0xFF00, 0xCB00, ori),
	IDEF(0xFF00, 0xCF00, orm),
	IDEF(0xF0FF, 0x401B, tas),
	IDEF(0xF00F, 0x2008, tst),
	IDEF(0xFF00, 0xC800, tsti),
	IDEF(0xFF00, 0xCC00, tstm),
	IDEF(0xF00F, 0x200A, xor),
	IDEF(0xFF00, 0xCA00, xori),
	IDEF(0xFF00, 0xCE00, xorm),

	/* shift instructions, p. 38 */
	IDEF(0xF0FF, 0x4004, rotl),
	IDEF(0xF0FF, 0x4005, rotr),
	IDEF(0xF0FF, 0x4024, rotcl),
	IDEF(0xF0FF, 0x4025, rotcr),
	IDEF(0xF0FF, 0x4020, shal),
	IDEF(0xF0FF, 0x4021, shar),
	IDEF(0xF0FF, 0x4000, shll),
	IDEF(0xF0FF, 0x4001, shlr),
	IDEF(0xF0FF, 0x4008, shll2),
	IDEF(0xF0FF, 0x4009, shlr2),
	IDEF(0xF0FF, 0x4018, shll8),
	IDEF(0xF0FF, 0x4019, shlr8),
	IDEF(0xF0FF, 0x4028, shll16),
	IDEF(0xF0FF, 0x4029, shlr16),

	/* branch instructions, p. 39 */
	IDEF(0xFF00, 0x8B00, bf),
	IDEF(0xFF00, 0x8F00, bfs),
	IDEF(0xFF00, 0x8900, bt),
	IDEF(0xFF00, 0x8D00, bts),
	IDEF(0xF000, 0xA000, bra),
	IDEF(0xF0FF, 0x0023, braf),
	IDEF(0xF000, 0xB000, bsr),
	IDEF(0xF0FF, 0x0003, bsrf),
	IDEF(0xF0FF, 0x402B, jmp),
	IDEF(0xF0FF, 0x400B, jsr),
	IDEF(0xFFFF, 0x000B, rts),

	/* system control instructions, p. 40 */
	IDEF(0xFFFF, 0x0008, clrt),
	IDEF(0xFFFF, 0x0028, clrmac),
	IDEF(0xF0FF, 0x400E, ldcsr),
	IDEF(0xF0FF, 0x401E, ldcgbr),
	IDEF(0xF0FF, 0x402E, ldcvbr),
	IDEF(0xF0FF, 0x4007, ldcmsr),
	IDEF(0xF0FF, 0x4017, ldcmgbr),
	IDEF(0xF0FF, 0x4027, ldcmvbr),
	IDEF(0xF0FF, 0x400A, ldsmach),
	IDEF(0xF0FF, 0x401A, ldsmacl),
	IDEF(0xF0FF, 0x402A, ldspr),
	IDEF(0xF0FF, 0x4006, ldsmmach),
	IDEF(0xF0FF, 0x4016, ldsmmacl),
	IDEF(0xF0FF, 0x4026, ldsmpr),
	IDEF(0xFFFF, 0x0009, nop),
	IDEF(0xFFFF, 0x002B, rte),
	IDEF(0xFFFF, 0x0018, sett),
	IDEF(0xFFFF, 0x001B, sleep),
	IDEF(0xF0FF, 0x0002, stcsr),
	IDEF(0xF0FF, 0x0012, stcgbr),
	IDEF(0xF0FF, 0x0022, stcvbr),
	IDEF(0xF0FF, 0x4003, stcmsr),
	IDEF(0xF0FF, 0x4013, stcmgbr),
	IDEF(0xF0FF, 0x4023, stcmvbr),
	IDEF(0xF0FF, 0x000A, stsmach),
	IDEF(0xF0FF, 0x001A, stsmacl),
	IDEF(0xF0FF, 0x002A, stspr),
	IDEF(0xF0FF, 0x4002, stsmmach),
	IDEF(0xF0FF, 0x4012, stsmmacl),
	IDEF(0xF0FF, 0x4022, stsmpr),
	IDEF(0xFF00, 0xC300, trapa),
};

/* SH-4 specific */
static const idesctype insns_desc_sh4[] =
{
	/* arithmetic */
	IDEF(0xF00F, 0x400C, shad),
	IDEF(0xF00F, 0x400D, shld),

	/* tlb, cache, sqs */
	IDEF(0xFFFF, 0x0038, ldtlb),
	IDEF(0xF0FF, 0x0083, pref),
	IDEF(0xF0FF, 0x0093, ocbi),
	IDEF(0xF0FF, 0x00A3, ocbp),
	IDEF(0xF0FF, 0x00B3, ocbwb),
	IDEF(0xF0FF, 0x00C3, movca),

	/* system control */
	IDEF(0xF0FF, 0x403E, ldcssr),
	IDEF(0xF0FF, 0x404E, ldcspc),
	IDEF(0xF0FF, 0x40FA, ldcdbr),
	IDEF(0xF08F, 0x408E, ldcrbank),

	IDEF(0xF0FF, 0x0032, stcssr),
	IDEF(0xF0FF, 0x0040, stcspc),
	IDEF(0xF0FF, 0x003A, stcsgr),
	IDEF(0xF0FF, 0x00FA, stcdbr),
	IDEF(0xF08F, 0x0082, stcrbank),

	IDEF(0xF0FF, 0x4037, ldcmssr),
	IDEF(0xF0FF, 0x4047, ldcmspc),
	IDEF(0xF0FF, 0x40F6, ldcmdbr),
	IDEF(0xF08F, 0x4087, ldcmrbank),

	IDEF(0xF0FF, 0x4033, stcmssr),
	IDEF(0xF0FF, 0x4043, stcmspc),
	IDEF(0xF0FF, 0x4032, stcmsgr),
	IDEF(0xF0FF, 0x40F2, stcmdbr),
	IDEF(0xF08F, 0x4083, stcmrbank),

	IDEF(0xF0FF, 0x405A, ldsfpul),
	IDEF(0xF0FF, 0x406A, ldsfpscr),
	IDEF(0xF0FF, 0x4056, ldsmfpul),
	IDEF(0xF0FF, 0x4066, ldsmfpscr),

	IDEF(0xF0FF, 0x005A, stsfpul),
	IDEF(0xF0FF, 0x006A, stsfpscr),
	IDEF(0xF0FF, 0x4052, stsmfpul),
	IDEF(0xF0FF, 0x4062, stsmfpscr),

	/* floating-point, no operands */
	IDEF(0xFFFF, 0xF3FD, fschg),
	IDEF(0xFFFF, 0xFBFD, frchg),

	/* floating-point, one operand */
	IDEF(0xF0FF, 0xF00D, fsts),
	IDEF(0xF0FF, 0xF01D, flds),
	IDEF(0xF0FF, 0xF02D, flt),
	IDEF(0xF0FF, 0xF03D, ftrc),
	IDEF(0xF0FF, 0xF04D, fneg),
	IDEF(0xF0FF, 0xF05D, fabs),
	IDEF(0xF0FF, 0xF06D, fsqrt),
	IDEF(0xF0FF, 0xF07D, fsrra),
	IDEF(0xF0FF, 0xF08D, fldi0),
	IDEF(0xF0FF, 0xF09D, fldi1),
	IDEF(0xF0FF, 0xF0AD, fcnvsd),
	IDEF(0xF0FF, 0xF0BD, fcnvds),
	IDEF(0xF0FF, 0xF0ED, fipr),		/* 1111nnmm11101101 */
	IDEF(0xF1FF, 0xF0FD, fsca),		/* 1111nnn011111101 */
	IDEF(0xF3FF, 0xF1FD, ftrv),		/* 1111nn0111111101 */

	/* floating-point, two operands */
	IDEF(0xF00F, 0xF000, fadd),
	IDEF(0xF00F, 0xF001, fsub),
	IDEF(0xF00F, 0xF002, fmul),
	IDEF(0xF00F, 0xF003, fdiv),
	IDEF(0xF00F, 0xF004, fcmpeq),
	IDEF(0xF00F, 0xF005, fcmpgt),
	IDEF(0xF00F, 0xF006, fmov_index_load),
	IDEF(0xF00F, 0xF007, fmov_index_store),
	IDEF(0xF00F, 0xF008, fmov_load),
	IDEF(0xF00F, 0xF009, fmov_restore),
	IDEF(0xF00F, 0xF00A, fmov_store),
	IDEF(0xF00F, 0xF00B, fmov_save),
	IDEF(0xF00F, 0xF00C, fmov),
	IDEF(0xF00F, 0xF00E, fmac),
};

#endif /*__VK_SH_INSNS_DESC_H__ */
